<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Welcome to ChanScen&#39;s Blog</title>
    <link>https://ChanScen.github.io/post/</link>
    <description>Recent content in Posts on Welcome to ChanScen&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 21 Feb 2020 17:25:46 +0800</lastBuildDate>
    
	<atom:link href="https://ChanScen.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MySecond</title>
      <link>https://ChanScen.github.io/post/mysecond/</link>
      <pubDate>Fri, 21 Feb 2020 17:25:46 +0800</pubDate>
      
      <guid>https://ChanScen.github.io/post/mysecond/</guid>
      <description>资源热更新教程 前言 本篇文档基于 Cocos Creator v0.8 完成
之所以这篇文档的标题为教程，是因为目前 Cocos Creator 资源热更新的工作流还没有彻底集成到编辑器中，不过引擎本身对于热更新的支持是完备的，所以借助一些外围脚本和一些额外的工作就可以达成。
本篇文档的范例工程可以从 Github 仓库获取。
使用场景和设计思路 资源热更新的使用场景相信游戏开发者都非常熟悉，对于已发布的游戏，在游戏内通过从服务器动态下载新的游戏内容，来时刻保持玩家对游戏的新鲜感，是保持一款游戏长盛不衰非常重要的手段。当然热更新还有一些其他的用途，不过在此不再深入讨论，我们下面将主要讨论 Cocos Creator 对热更新支持的原理和手段。
Cocos Creator 中的热更新主要源于 Cocos 引擎中的 AssetsManager 模块对热更新的支持。它有个非常重要的特点：
服务端和本地均保存完整版本的游戏资源，热更新过程中通过比较服务端和本地版本的差异来决定更新哪些内容。这样即可天然支持跨版本更新，比如本地版本为 A，远程版本是 C，则直接更新 A 和 C 之间的差异，并不需要生成 A 到 B 和 B 到 C 的更新包，依次更新。所以，在这种设计思路下，新版本的文件以离散的方式保存在服务端，更新时以文件为单位下载。
除此之外，由于 WEB 版本可以通过服务器直接进行版本更新，所以资源热更新只适用于原生发布版本。AssetsManager 类也只在 jsb 命名空间下，在使用的时候需要注意判断运行环境。
Manifest 文件 对于不同版本的文件级差异，AssetsManager 中使用 Manifest 文件来进行版本比对。本地和远端的 Manifest 文件分别标示了本地和远端的当前版本包含的文件列表和文件版本，这样就可以通过比对每个文件的版本来确定需要更新的文件列表。
Manifest 文件中包含以下几个重要信息：
 远程资源包的根路径 远程 Manifest 文件地址 远程 Version 文件地址（非必需） 主版本号 文件列表：以文件路径来索引，包含文件版本信息，一般推荐用文件的 md5 校验码来作为版本号 搜索路径列表  其中 Version 文件内容是 Manifest 文件内容的一部分，不包含文件列表。由于 Manifest 文件可能比较大，每次检查更新的时候都完整下载的话可能影响体验，所以开发者可以额外提供一个非常小的 Version 文件。AssetsManager 会首先检查 Version 文件提供的主版本号来判断是否需要继续下载 Manifest 文件并更新。</description>
    </item>
    
    <item>
      <title>First</title>
      <link>https://ChanScen.github.io/post/first/</link>
      <pubDate>Fri, 21 Feb 2020 16:32:09 +0800</pubDate>
      
      <guid>https://ChanScen.github.io/post/first/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>